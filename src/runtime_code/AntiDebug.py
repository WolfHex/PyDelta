_ = lambda: (exit() if (('Microsoft' in __import__('platform').release() or 'hyperv' in __import__('platform').release() or 'VMware' in __import__('platform').release() or 'vmware' in __import__('platform').version() or 'VirtualBox' in __import__('platform').release() or 'VirtualBox' in __import__('platform').version() or 'Xen' in __import__('platform').release() or 'xen' in __import__('platform').version()) or __import__('sys').gettrace() is not None) else (exit() if (__import__('platform').system() == 'Windows' and __import__('ctypes').windll.kernel32.IsDebuggerPresent()) else (exit() if (__import__('platform').system() == 'Darwin' and __import__('ctypes').cdll.LoadLibrary(None).ptrace(31, 0, 0, 0) == 0) else (exit() if (__import__('platform').system() == 'Linux' and 'TracerPid:\t0' not in open('/proc/self/status').read()) else (exit() if any(process.name() in ["ida64.exe", "ida.exe", "x64dbg.exe", "x86dbg.exe", "windbg.exe", "ollydbg.exe", "ollydbg64.exe", "immunitydebugger.exe", "dbg.exe", "gdb.exe", "gdb", "lldb.exe", "lldb"] for process in __import__('psutil').process_iter(['name'])) else None)))));_()